// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Force Kotlin 1.9.25 for Compose Compiler 1.5.15 compatibility at project level
ext.kotlin_version = '1.9.25'
ext.kotlinVersion = '1.9.25'
rootProject.ext.kotlin_version = '1.9.25'
rootProject.ext.kotlinVersion = '1.9.25'

// Suppress Kotlin version compatibility check as a system property
System.setProperty("suppressKotlinVersionCompatibilityCheck", "true")
System.setProperty("kotlin.suppressKotlinVersionCompatibilityCheck", "true")

buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')
        kotlinVersion = '1.9.25'

        ndkVersion = "26.1.10909125"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath('com.android.tools.build:gradle')
        classpath('com.facebook.react:react-native-gradle-plugin')
        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')
    }
}

apply plugin: "com.facebook.react.rootproject"

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url(new File(['node', '--print', "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), '../android'))
        }
        maven {
            // Android JSC is installed from npm
            url(new File(['node', '--print', "require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim(), '../dist'))
        }

        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
    
    // Force Kotlin version resolution for Compose Compiler compatibility
    configurations.all {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-stdlib:1.9.25"
            force "org.jetbrains.kotlin:kotlin-stdlib-common:1.9.25"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.25"
            force "org.jetbrains.kotlin:kotlin-reflect:1.9.25"
            force "org.jetbrains.kotlin:kotlin-compiler-embeddable:1.9.25"
            force "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.25"
        }
    }
    
    // Fix Expo SoftwareComponent 'release' issue by disabling problematic publishing
    afterEvaluate { project ->
        if (project.hasProperty('publishing')) {
            project.publishing {
                publications.removeAll { it.name == 'release' }
            }
        }
    }
    
    // Minimal Java 17 configuration only
    subprojects {
        afterEvaluate {
            if (project.hasProperty('android')) {
                android {
                    compileOptions {
                        sourceCompatibility JavaVersion.VERSION_17
                        targetCompatibility JavaVersion.VERSION_17
                    }
                }
            }
        }
    }
}
