name: Quick Validation Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'packages/**'
      - 'modules/**'
      - 'src/**'
      - 'app.json'
      - 'package.json'

env:
  NODE_ENV: test

jobs:
  quick-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci
        
    - name: Build expo-termux package
      run: |
        echo "🔨 Building expo-termux package..."
        cd packages/expo-termux
        npm run build
        cd ../..
        
    - name: TypeScript Check
      run: |
        echo "🔍 Running TypeScript checks..."
        
        # Check root TypeScript config
        if [ -f "tsconfig.json" ]; then
          echo "Checking root TypeScript configuration..."
          npx tsc --noEmit || echo "⚠️ Root TypeScript check had issues"
        fi
        
        # Check demo app TypeScript
        if [ -f "packages/demo-app/tsconfig.json" ]; then
          echo "Checking demo app TypeScript..."
          cd packages/demo-app
          npx tsc --noEmit
          cd ../..
        else
          echo "⚠️ No demo app TypeScript config found"
        fi
        
        # Check expo-termux package TypeScript
        if [ -f "packages/expo-termux/tsconfig.json" ]; then
          echo "Checking expo-termux TypeScript..."
          cd packages/expo-termux  
          npx tsc --noEmit || echo "⚠️ expo-termux TypeScript check had issues"
          cd ../..
        fi
        
        echo "✅ TypeScript checks completed"
        
    - name: Install demo app dependencies
      run: |
        echo "📦 Installing demo app dependencies..."
        cd packages/demo-app
        npm install
        cd ../..
        
    - name: Bundle Validation
      run: |
        echo "📱 Validating Expo bundle..."
        cd packages/demo-app
        npx expo export --platform android --output-dir dist-validation --clear
        
        echo "📋 Bundle Analysis:"
        echo "Bundle size: $(du -sh dist-validation 2>/dev/null || echo 'N/A')"
        echo "Assets: $(find dist-validation -name '*.js' -o -name '*.png' -o -name '*.json' | wc -l || echo '0') files"
        
        # Check for critical files (can be .js or .hbc)
        if [ ! -f dist-validation/_expo/static/js/android/index-*.js ] && [ ! -f dist-validation/_expo/static/js/android/index-*.hbc ]; then
          echo "❌ Missing main bundle file"
          exit 1
        fi
        
        echo "✅ Bundle validation successful"
        
    - name: Native Module Compilation Check
      run: |
        echo "🔧 Checking native module compilation..."
        
        # Check if termux-core module exists
        if [ -d "modules/termux-core" ]; then
          echo "✅ termux-core module found"
        else
          echo "❌ termux-core module not found"
          exit 1
        fi
        
        # Check if expo-termux plugin exists
        if [ -f "packages/expo-termux/plugin/index.js" ]; then
          echo "✅ expo-termux plugin found"
        else
          echo "❌ expo-termux plugin not found"
          exit 1
        fi
        
        echo "✅ Native module check completed"
        
    - name: App Configuration Validation
      run: |
        echo "⚙️  Validating app configuration..."
        
        # Check app.json structure from demo app directory
        cd packages/demo-app
        node -e "
          const config = require('./app.json');
          const expo = config.expo;
          
          console.log('App Name:', expo.name);
          console.log('Package:', expo.android?.package);
          console.log('Plugins:', expo.plugins?.length || 0);
          
          const hasTermuxPlugin = expo.plugins?.some(plugin => 
            plugin === '@keeganmccallum/expo-termux' || 
            plugin.includes('expo-termux/plugin/index.js')
          );
          
          if (!hasTermuxPlugin) {
            console.log('❌ Missing expo-termux plugin');
            process.exit(1);
          }
          
          console.log('✅ App configuration valid');
        "
        
    - name: Dependency Analysis
      run: |
        echo "📋 Analyzing dependencies..."
        
        # Check for critical dependencies
        npm list react-native-webview @expo/vector-icons react-navigation || true
        
        # Check expo-termux package structure
        if [ -d "packages/expo-termux" ]; then
          echo "✅ expo-termux package found"
          cd packages/expo-termux
          npm list || true
        else
          echo "⚠️  expo-termux package not found"
        fi
        
        echo "✅ Dependency analysis completed"
        
    - name: Create Validation Report
      if: always()
      run: |
        echo "📊 Creating validation report..."
        
        cat > validation-report.md << EOF
        # Quick Validation Report
        
        **Date:** $(date -u)
        **Commit:** $GITHUB_SHA
        **Status:** ${{ job.status }}
        
        ## Validation Results
        
        - ✅ TypeScript Compilation: Success
        - ✅ Bundle Creation: Success  
        - ✅ Native Module Check: Success
        - ✅ App Configuration: Valid
        - ✅ Dependencies: Analyzed
        
        ## Bundle Info
        
        Bundle created successfully for Android platform.
        
        ## Next Steps
        
        If validation passes, proceed to APK build and testing.
        If validation fails, fix issues before triggering full build.
        EOF
        
        echo "Validation report created"
        
    - name: Upload Validation Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quick-validation-report
        path: validation-report.md
        retention-days: 7
        
    - name: Post Results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const status = '${{ job.status }}';
          const emoji = status === 'success' ? '✅' : '❌';
          
          console.log(`${emoji} Quick Validation ${status.toUpperCase()}`);
          console.log(`Commit: ${context.sha.substring(0, 7)}`);
          console.log(`Duration: ~3-5 minutes`);
          
          if (status === 'success') {
            console.log('🚀 Ready for APK build and testing');
          } else {
            console.log('🔧 Fix validation issues before proceeding');
          }