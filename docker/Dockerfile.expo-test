# Docker environment for Expo React Native testing
FROM node:20-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    python3 \
    python3-pip \
    openjdk-17-jdk \
    curl \
    unzip \
    xvfb \
    x11vnc \
    fluxbox \
    && rm -rf /var/lib/apt/lists/*

# Set Java environment
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$PATH:$JAVA_HOME/bin

# Install Android SDK
ENV ANDROID_HOME=/opt/android-sdk
ENV PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

RUN mkdir -p $ANDROID_HOME && \
    cd $ANDROID_HOME && \
    curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip sdk-tools.zip && \
    rm sdk-tools.zip && \
    mkdir -p cmdline-tools/latest && \
    mv cmdline-tools/* cmdline-tools/latest/ || true

# Accept Android licenses
RUN yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
RUN $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
    "platform-tools" \
    "platforms;android-31" \
    "build-tools;31.0.0" \
    "emulator" \
    "system-images;android-31;google_apis;x86_64"

# Install global npm packages
RUN npm install -g expo-cli @expo/cli jest

# Set up working directory
WORKDIR /app

# Install app dependencies first (for better caching)
COPY package*.json ./
COPY modules/termux-core/package*.json ./modules/termux-core/
RUN npm ci

# Copy source code
COPY . .

# Create virtual display for headless testing
ENV DISPLAY=:1
RUN printf '#!/bin/bash\nXvfb :1 -screen 0 1024x768x24 &\nexec "$@"' > /usr/local/bin/xvfb-run-safe.sh && \
    chmod +x /usr/local/bin/xvfb-run-safe.sh

# Default command
CMD ["npm", "test"]